<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="23.05.0.0">
<procedure name="main">
<interface/>
<body>
<l>dev_close_window ()</l>
<l>dev_set_draw ('margin')</l>
<l>dev_set_line_width (2)</l>
<l>dev_set_color ('orange red')</l>
<l>read_image (Image, '/home/grantli/halcon_ws/HalconCPPExamples/HandeyeDemo/source/d15.bmp')</l>
<l>get_image_size (Image, Width, Height)</l>
<l>dev_open_window (0, 0, Width/2, Height/2, 'black', WindowHandle)</l>
<l>dev_display (Image)</l>
<c></c>
<c>* 准工作备</c>
<c>* 选择 ROI</c>
<l>gen_rectangle1 (Rectangle1, 470, 270, 530, 330)</l>
<l>gen_rectangle1 (Rectangle2, 270, 470, 330, 530)</l>
<l>union2 (Rectangle1, Rectangle2, ModelRegion)</l>
<l>reduce_domain (Image, ModelRegion, ImageROI)</l>
<c>* 创建形状模板</c>
<l>create_shape_model (ImageROI, 'auto', -0.39, 0.79, 'auto', 'auto', 'use_polarity', 'auto', 'auto', ModelID)</l>
<c>* 获取模板轮廓</c>
<l>get_shape_model_contours (ModelContours, ModelID, 1)</l>
<c>* 参考点 也是模板匹配中心</c>
<l>area_center (ModelRegion, ModelRegionArea, RefRow, RefColumn)</l>
<c>* 匹配模板</c>
<l>* find_shape_model (Image, ModelID, -0.39, 0.79, 0.5, 1, 0.5, 'least_squares', 0, 0.9, RefRow, RefColumn, Angle, Score)</l>
<c>* 模板位置</c>
<l>vector_angle_to_rigid (0, 0, 0, RefRow, RefColumn, 0, HomMat2D)</l>
<c>* 等价</c>
<l>*   hom_mat2d_identity (HomMat2D)</l>
<l>*   hom_mat2d_rotate (HomMat2D, Angle, 0, 0, HomMat2D)</l>
<l>*   hom_mat2d_translate (HomMat2D, Row, Column, HomMat2D)</l>
<l>affine_trans_contour_xld (ModelContours, TransContours, HomMat2D)</l>
<c></c>
<c>* 可以手绘模型，这里就用固定位置的</c>
<l>* dev_get_window(WindowHandle)</l>
<l>* draw_rectangle2(WindowHandle, Row1, Column1, Phi, Length1, Length2)</l>
<l>* draw_ellipse (WindowHandle, Row4, Column4, Phi3, Radius1, Radius2)</l>
<c>* 矩形框尽量在轮廓边缘</c>
<l>Row1 := 500</l>
<l>Column1 := 300</l>
<l>Phi1 := 0</l>
<l>Length11 := 15</l>
<l>Length12 := 15</l>
<c></c>
<l>Row2 := 300</l>
<l>Column2 := 500</l>
<l>Phi2 := 0</l>
<l>Length21 := 15</l>
<l>Length22 := 15</l>
<c></c>
<l>RowBegin := 752</l>
<l>ColumnBegin := 210</l>
<l>RowEnd := 850</l>
<l>ColumnEnd := 210</l>
<c></c>
<l>Row11 := 150</l>
<l>Column11 := 700</l>
<l>Row21 := 500</l>
<l>Column21 := 500</l>
<l>R := 50</l>
<c></c>
<l>Row31 := 600</l>
<l>Column31 := 800</l>
<l>Phi := 0</l>
<l>R1 := 75</l>
<l>R2 := 50</l>
<c></c>
<c>* 下面就是固定套路了</c>
<c>* 创建测量模型</c>
<l>create_metrology_model(MetrologyHandle)</l>
<c>* 设置模型对象图像大小</c>
<l>set_metrology_model_image_size(MetrologyHandle, Width, Height)</l>
<c>* 添加测量模型</c>
<l>add_metrology_object_rectangle2_measure(MetrologyHandle, Row1, Column1, Phi1, Length11, Length12, 20, 3, 1, 30, [], [], Index1)</l>
<l>add_metrology_object_rectangle2_measure(MetrologyHandle, Row2, Column2, Phi2, Length21, Length22, 20, 3, 1, 30, [], [], Index2)</l>
<l>add_metrology_object_line_measure (MetrologyHandle, RowBegin, ColumnBegin, RowEnd, ColumnEnd, 20, 3, 1, 30, [], [], Index3)</l>
<l>add_metrology_object_circle_measure (MetrologyHandle, Row11, Column11, R, 20, 5, 1, 30, [], [], Index4)</l>
<l>add_metrology_object_circle_measure (MetrologyHandle, Row21, Column21, R, 20, 5, 1, 30, [], [], Index5)</l>
<l>add_metrology_object_ellipse_measure (MetrologyHandle, Row31, Column31, Phi, R1, R2, 20, 5, 1, 30, [], [], Index6)</l>
<c>* 设置对象参数</c>
<l>set_metrology_object_param(MetrologyHandle, 'all', 'measure_select', 'first')</l>
<l>set_metrology_object_param(MetrologyHandle, 'all', 'measure_transition', 'negative')</l>
<l>set_metrology_object_param (MetrologyHandle, 'all', 'measure_sigma', 2)</l>
<l>set_metrology_object_param (MetrologyHandle, 'all', 'measure_length1', 20)</l>
<l>set_metrology_object_param (MetrologyHandle, 'all', 'min_score', 0.3)</l>
<c>* 下面过渡方向不一样</c>
<l>set_metrology_object_param(MetrologyHandle, Index3, 'measure_transition', 'positive')</l>
<l>set_metrology_object_param(MetrologyHandle, Index4, 'measure_transition', 'positive')</l>
<l>set_metrology_object_param(MetrologyHandle, Index5, 'measure_transition', 'positive')</l>
<l>set_metrology_object_param(MetrologyHandle, Index6, 'measure_transition', 'positive')</l>
<c>* 设置模型参数</c>
<l>set_metrology_model_param(MetrologyHandle, 'reference_system', [RefRow, RefColumn, 0])</l>
<c>* 对齐测量模板</c>
<l>align_metrology_model(MetrologyHandle, RefRow, RefColumn, 0)</l>
<c>* 应用测量模板</c>
<l>apply_metrology_model(Image, MetrologyHandle)</l>
<c>* 获取所有结果</c>
<l>get_metrology_object_result(MetrologyHandle, Index1, 'all', 'result_type', 'all_param', RectResult1)</l>
<l>get_metrology_object_result(MetrologyHandle, Index2 ,'all', 'result_type', 'all_param', RectResult2)</l>
<l>get_metrology_object_result(MetrologyHandle, Index3 ,'all', 'result_type', 'all_param', RectResult3)</l>
<l>get_metrology_object_result(MetrologyHandle, Index4 ,'all', 'result_type', 'all_param', RectResult4)</l>
<l>get_metrology_object_result(MetrologyHandle, Index5 ,'all', 'result_type', 'all_param', RectResult5)</l>
<l>get_metrology_object_result(MetrologyHandle, Index6 ,'all', 'result_type', 'all_param', RectResult6)</l>
<c>* 获取检测到的轮廓</c>
<l>get_metrology_object_result_contour(Contour1, MetrologyHandle, Index1, 'all', 1.5)</l>
<l>get_metrology_object_result_contour(Contour2, MetrologyHandle, Index2, 'all', 1.5)</l>
<l>get_metrology_object_result_contour(Contour3, MetrologyHandle, Index3, 'all', 1.5)</l>
<l>get_metrology_object_result_contour(Contour4, MetrologyHandle, Index4, 'all', 1.5)</l>
<l>get_metrology_object_result_contour(Contour5, MetrologyHandle, Index5, 'all', 1.5)</l>
<l>get_metrology_object_result_contour(Contour6, MetrologyHandle, Index6, 'all', 1.5)</l>
<c>* 获取测量轮廓</c>
<l>get_metrology_object_measures(Contours, MetrologyHandle, 'all', 'all', Row3, Column3)</l>
<c>* 保存测量模型</c>
<l>write_metrology_model (MetrologyHandle, 'MetrologyModel.mem')</l>
<c>* 清空模型</c>
<l>clear_metrology_model (MetrologyHandle)</l>
<c></c>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
