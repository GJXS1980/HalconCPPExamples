<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="23.05.0.0">
<procedure name="main">
<interface/>
<body>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,2,1]" as_ord="1">* open_framegrabber ('DirectShow', 1, 1, 0, 0, 0, 0, 'default', 8, 'rgb', -1, 'false', 'default', '[0] Integrated Camera', 0, -1, AcqHandle)</l>
<c></c>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="1">* Image Acquisition 01: Code generated by Image Acquisition 01</c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[1,1]" as_ord="2">open_framegrabber ('Video4Linux2', 1, 1, 0, 0, 0, 0, 'progressive', 8, 'default', -1, 'false', 'auto', 'video0', 0, -1, AcqHandle)</l>
<c></c>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,1]" as_ord="1">grab_image_start (AcqHandle, -1)</l>
<l>create_dict (WindowDict)</l>
<l>read_dl_model ('model_best.hdl', DLModelHandle)</l>
<l>read_dict ('labels.hdict', [], [], DLDataset)</l>
<l>get_dict_tuple (DLDataset,'class_names', classNames)</l>
<l>dev_get_window (WindowHandle)</l>
<l>dev_set_draw ('margin')</l>
<l>set_display_font (WindowHandle, 22, 'mono', 'true', 'false')</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,2]" as_ord="1">while (true)</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,3]" as_ord="1">    grab_image_async (Image, AcqHandle, -1)</l>
<l>    zoom_image_size (Image, ImageZoom, 512, 320, 'constant')</l>
<l>    convert_image_type (ImageZoom, ImageConverted, 'real')</l>
<c as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[2,4]" as_ord="1">    * Image Acquisition 01: Do something</c>
<l>    gen_dl_samples_from_images (ImageConverted, DLSampleInference)</l>
<l>    apply_dl_model (DLModelHandle, DLSampleInference, [], DLResult)</l>
<l>    get_dict_tuple (DLResult, 'bbox_class_id', classId)</l>
<l>    if(|classId|)</l>
<l>        get_dict_tuple (DLResult, 'bbox_row', row0)</l>
<l>        get_dict_tuple (DLResult, 'bbox_col', col0)</l>
<l>        get_dict_tuple (DLResult, 'bbox_length1', length0)</l>
<l>        get_dict_tuple (DLResult, 'bbox_length2', length1)</l>
<l>        get_dict_tuple (DLResult, 'bbox_phi', phi)</l>
<l>        get_dict_tuple (DLResult, 'bbox_confidence', confidence)</l>
<l>        gen_rectangle2 (Rectangle, row0, col0, phi, length0, length1)</l>
<l>        dev_display(ImageConverted)</l>
<l>        dev_display (Rectangle)</l>
<l>        disp_message (WindowHandle, classNames[classId], 'window', 12, 12, 'black', 'true')</l>
<l>    endif</l>
<c>    * </c>
<l>*     dev_display_dl_data (DLSampleInference, DLResult, DLDataset, 'bbox_result', [], WindowDict)</l>
<l>*     dev_disp_text ('Press F5 to continue', 'window', 'bottom', 'right', 'black', [], [])</l>
<c></c>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[3,1]" as_ord="1">endwhile</l>
<l as_id="image_acquisition" as_name="Image Acquisition 01" as_grp="[4,1]" as_ord="1">close_framegrabber (AcqHandle)</l>
<c></c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
